{"version":3,"sources":["pages/LoginPage.js"],"names":["styles","title","color","form","display","alignItems","flexDirection","justifyContent","label","fontSize","LoginPage","useState","email","setEmail","password","setPassword","handleChange","e","target","name","value","console","warn","dispatch","useDispatch","handleSubmit","useCallback","preventDefault","authOperations","logIn","style","onSubmit","autoComplete","Group","controlId","Label","Control","type","placeholder","onChange"],"mappings":"iQAMMA,EAAS,CACbC,MAAO,CACLC,MAAO,SAETC,KAAM,CACJC,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAElBC,MAAO,CACLN,MAAO,QACPO,SAAU,SAIC,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MAEF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACEC,QAAQC,KAAR,8BAAoCH,EAApC,wBAGAI,EAAWC,cAEXC,EAAeC,uBACnB,SAAAT,GACEA,EAAEU,iBACFJ,EAASK,IAAeC,MAAM,CAAEjB,QAAOE,cAEvCD,EAAS,IACTE,EAAY,MAEd,CAACH,EAAOE,EAAUS,IAGpB,OACE,gCACE,oBAAIO,MAAO9B,EAAOC,MAAlB,wBAEA,eAAC,IAAD,CAAM8B,SAAUN,EAAcK,MAAO9B,EAAOG,KAAM6B,aAAa,MAA/D,UACE,eAAC,IAAKC,MAAN,CAAYC,UAAU,YAAtB,UACE,cAAC,IAAKC,MAAN,CAAYL,MAAO9B,EAAOQ,MAA1B,oBACA,cAAC,IAAK4B,QAAN,CACEC,KAAK,QACLC,YAAY,mBACZnB,KAAK,QACLC,MAAOR,EACP2B,SAAUvB,OAId,eAAC,IAAKiB,MAAN,CAAYC,UAAU,eAAtB,UACE,cAAC,IAAKC,MAAN,CAAYL,MAAO9B,EAAOQ,MAA1B,sBACA,cAAC,IAAK4B,QAAN,CACEC,KAAK,WACLC,YAAY,WACZnB,KAAK,WACLC,MAAON,EACPyB,SAAUvB,OAId,cAAC,IAAD,CAAQqB,KAAK,SAAb","file":"static/js/6.40309ba3.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Form } from 'react-bootstrap';\n\nconst styles = {\n  title: {\n    color: 'white',\n  },\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  label: {\n    color: 'white',\n    fontSize: '16px',\n  },\n};\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        console.warn(`This type of name - ${name} doesn't work out`);\n    }\n  };\n  const dispatch = useDispatch();\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      dispatch(authOperations.logIn({ email, password }));\n\n      setEmail('');\n      setPassword('');\n    },\n    [email, password, dispatch],\n  );\n\n  return (\n    <div>\n      <h1 style={styles.title}>Login page</h1>\n\n      <Form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label style={styles.label}>Email </Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Example@mail.com\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label style={styles.label}>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\">Login</Button>\n      </Form>\n    </div>\n  );\n}\n\n// const mapDispatchToProps = {\n//   onLogin: authOperations.logIn,\n// };\n\n// export default connect(null, mapDispatchToProps)(LoginPage);\n"],"sourceRoot":""}