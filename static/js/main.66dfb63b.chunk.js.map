{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","redux/auth/auth-actions.js","components/Navigations/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/avatardefault.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRouter/PublicRouter.js","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","console","log","data","registerSuccess","registerError","message","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","_","payload","setError","error","isAuthenticated","combineReducers","getIsAuthenticated","state","getUsername","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","fontSize","Navigation","isLoggedIn","useSelector","authSelectors","to","exact","style","activeStyle","AuthNav","container","alignItems","avatar","marginRight","UserMenu","useDispatch","onLogout","useCallback","authOperations","src","defaultAvatar","alt","width","Button","type","onClick","header","justifyContent","borderBottom","AppBar","PrivateRoute","redirectTo","children","routeProps","PublicRoute","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","useEffect","fallback","PublicRouter","path","component","items","action","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","rootReducer","contacts","contactsReducer","persistReducer","authReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66dfb63b.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('contacts/filter');\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    console.log(response.data);\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n// eslint-disable-next-line\nexport default { register, logOut, logIn, getCurrentUser };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginSuccess]: setError,\n  [authActions.loginRequest]: () => null,\n  [authActions.logoutSuccess]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\n// eslint-disable-next-line\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n// eslint-disable-next-line\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: 'white',\n  },\n  activeLink: {\n    color: '#0275d8',\n    fontSize: 'large',\n  },\n};\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(Navigation);\n","import { NavLink } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: 'white',\n  },\n  activeLink: {\n    color: '#0275d8',\n    fontSize: 'large',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Register\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","export default __webpack_public_path__ + \"static/media/avatardefault.10691648.png\";","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './avatardefault.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n    color: '#fff',\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  const onLogout = useCallback(\n    () => dispatch(authOperations.logOut()),\n    [dispatch],\n  );\n\n  return (\n    <div style={styles.container}>\n      <img src={defaultAvatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Welcome, {name}</span>\n      <Button type=\"button\" onClick={onLogout}>\n        Logout\n      </Button>\n    </div>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   name: authSelectors.getUsername(state),\n//   avatar: defaultAvatar,\n// });\n\n// const mapDispatchToProps = {\n//   onLogout: authOperations.logOut,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigations/Navigation';\nimport AuthNav from '../AuthNav/AuthNav';\nimport UserMenu from '../UserMenu/UserMenu';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nexport default function PrivateRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) => {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n\n// const mapStateToProps = state => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(PublicRoute);\n","import { Suspense, lazy, useEffect } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRouter from './components/PublicRouter';\n\nimport { authOperations } from './redux/auth';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <AppBar />\n\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <PublicRouter exact path=\"/\" component={HomePage} />\n          <PublicRouter\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={RegisterPage}\n          />\n          <PublicRouter\n            path=\"/login\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={LoginPage}\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo=\"/login\"\n            component={ContactsPage}\n          />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({ items, filter, loading, error });\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  auth: persistReducer(authPersistConfig, authReducer),\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}