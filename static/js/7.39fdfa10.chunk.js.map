{"version":3,"sources":["pages/RegisterPage.js"],"names":["styles","title","color","form","display","alignItems","flexDirection","justifyContent","label","fontSize","RegisterPage","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","target","value","console","warn","dispatch","useDispatch","handleSubmit","useCallback","preventDefault","authOperations","register","style","onSubmit","autoComplete","Group","controlId","Label","Control","type","placeholder","onChange","Text"],"mappings":"iQAMMA,EAAS,CACbC,MAAO,CACLC,MAAO,SAETC,KAAM,CACJC,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAElBC,MAAO,CACLN,MAAO,QACPO,SAAU,SAIC,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MAEF,IAAK,QACHN,EAASM,GACT,MAEF,IAAK,WACHJ,EAAYI,GACZ,MAEF,QACEC,QAAQC,KAAR,8BAAoCX,EAApC,wBAIAY,EAAWC,cAEXC,EAAeC,uBACnB,SAAAR,GACEA,EAAES,iBACFJ,EAASK,IAAeC,SAAS,CAAElB,OAAME,QAAOE,cAEhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,MAEd,CAACL,EAAME,EAAOE,EAAUQ,IAE1B,OACE,gCACE,oBAAIO,MAAO/B,EAAOC,MAAlB,+BAEA,eAAC,IAAD,CAAM+B,SAAUN,EAAcK,MAAO/B,EAAOG,KAAM8B,aAAa,MAA/D,UACE,eAAC,IAAKC,MAAN,CAAYC,UAAU,WAAtB,UACE,cAAC,IAAKC,MAAN,CAAYL,MAAO/B,EAAOQ,MAA1B,kBACA,cAAC,IAAK6B,QAAN,CACEC,KAAK,OACLC,YAAY,OACZ3B,KAAK,OACLS,MAAOT,EACP4B,SAAUtB,OAId,eAAC,IAAKgB,MAAN,CAAYC,UAAU,YAAtB,UACE,cAAC,IAAKC,MAAN,CAAYL,MAAO/B,EAAOQ,MAA1B,kBACA,cAAC,IAAK6B,QAAN,CACEC,KAAK,QACLC,YAAY,mBACZ3B,KAAK,QACLS,MAAOP,EACP0B,SAAUtB,IAEZ,cAAC,IAAKuB,KAAN,CAAWV,MAAO,CAAE7B,MAAO,WAA3B,gEAKF,eAAC,IAAKgC,MAAN,CAAYC,UAAU,eAAtB,UACE,cAAC,IAAKC,MAAN,CAAYL,MAAO/B,EAAOQ,MAA1B,sBAAuD,IACvD,cAAC,IAAK6B,QAAN,CACEC,KAAK,WACLC,YAAY,WACZ3B,KAAK,WACLS,MAAOL,EACPwB,SAAUtB,OAId,cAAC,IAAD,CAAQoB,KAAK,SAAb","file":"static/js/7.39fdfa10.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Form } from 'react-bootstrap';\n\nconst styles = {\n  title: {\n    color: 'white',\n  },\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  label: {\n    color: 'white',\n    fontSize: '16px',\n  },\n};\n\nexport default function RegisterPage() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        console.warn(`This type of name - ${name} doesn't work out`);\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      dispatch(authOperations.register({ name, email, password }));\n\n      setName('');\n      setEmail('');\n      setPassword('');\n    },\n    [name, email, password, dispatch],\n  );\n  return (\n    <div>\n      <h1 style={styles.title}>Registration page</h1>\n\n      <Form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <Form.Group controlId=\"formName\">\n          <Form.Label style={styles.label}>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label style={styles.label}>Mail</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Example@mail.com\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          ></Form.Control>\n          <Form.Text style={{ color: '#07010c' }}>\n            *We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label style={styles.label}>Password</Form.Label>{' '}\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    </div>\n  );\n}\n\n// const mapDispatchToProps = {\n//   onRegister: authOperations.register,\n// };\n\n// export default connect(null, mapDispatchToProps)(RegisterPage);\n"],"sourceRoot":""}